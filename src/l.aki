# Conway's Game Of Life in Akilang

pragma {
    size_level = 0
}

const {
    WIDTH=80,
    HEIGHT=32,
    FIELD_SIZE = (WIDTH+1)*(HEIGHT+1)
    DIVIDER_WIDTH = WIDTH+1
}

uni {
    field:byte[2,HEIGHT,WIDTH],    
    output:byte[FIELD_SIZE],
    divider:byte[DIVIDER_WIDTH],
    world=0,
    gen:u64
}

def reset() {
    gen=0U
    var y,x
    loop (y=0, y<HEIGHT)
        loop (x=0, x<WIDTH)
            field[world,y,x] = (
                if rnd(20)<4
                    then 1B
                    else 0B
            )
}

def randomize(){
    var y,x
    loop (y=0, y<HEIGHT)
        loop (x=0, x<WIDTH)
            field[world, y,x] = (
                if rnd(20)<1
                    then 1B
                    else field[world, y,x]
            )
}

def show() {
    var pop = 0, z=0, s=0B, y, x
    loop (y=0, y<HEIGHT) {
        loop (x=0, x<WIDTH) {
            s = (if field[world,y,x]>0B
                then 219B
                else 32B
            )
            output[z] = s
            pop += (if s<33B then 0 else 1)
            z+=1
        }
        output[z]=10B
        z+=1
    }
    output[z]=0B
    
    print('Generation: {gen} -- Population: {pop}\n{unsafe divider}\n{unsafe output}{unsafe divider}')
           
}

def life() {
    var sum:byte, t:byte, w2=1-world
    var x,y,j,k
    loop (y=0, y<HEIGHT)
        loop (x=0, x<WIDTH) {
            sum=0B
            t=0B
            loop (j=y-1,j<y+2) 
                loop (k=x-1, k<x+2)
                    sum=sum+field[world,
                        (j+HEIGHT) mod HEIGHT,
                        (k+WIDTH) mod WIDTH]
            t = field[world,y,x]
            sum-=t
            field[w2,y,x]={
                if sum == 3B then 1B
                    elif sum == 2B then t
                    else 0B
            }
        }
    gen+=1U
    world=w2
}

def setup(){
    var x
    loop (x=0, x<DIVIDER_WIDTH-1)
        divider[x]=177B
    divider[x]=0B
    reset()
    print ("Conway's Game Of Life

r - randomize
q - quit
Any other key will evolve the pattern

Press any key to begin ... ")
    inkey()
}

def main(){
    setup()
    loop {
        show()
        match inkey() {
            113, 81: break
            114, 82: {
                print("Randomize!")
                randomize()                
            }
            default: print("Next gen")
        }
        life()
    }
    print ("Goodbye!")
    return 0
}